package handlers

import (
	"elemei/internal/service"
	"elemei/internal/typ/req"
	"elemei/internal/typ/resp"
	"fmt"
	"github.com/gin-gonic/gin"
	"log"
	"net/http"
)

func Login(ctx *gin.Context) {
	var loginReq req.UserLoginReq
	if err := ctx.ShouldBindJSON(&loginReq); err != nil {
		log.Println(fmt.Errorf("[LoginInfo] param bind error: %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by ShouldBindJson: " + err.Error(),
			},
		})
		return
	}
	var loginResp resp.LoginResp
	var err error
	if loginResp, err = service.UserLogin(loginReq); err != nil {
		log.Println(fmt.Sprintf("[UserLogin] wrong: %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by service.UserLogin: " + err.Error(),
			},
		})
		return
	}
	ctx.JSON(http.StatusOK, &resp.T{
		MetaData: &resp.MetaData{
			Code: http.StatusOK,
			Msg:  "user identity check ok",
		},
		Result: loginResp,
	})
	return
}

func GetUserDetail(ctx *gin.Context) {
	var userDetailReq req.UserDetailReq
	if err := ctx.ShouldBindJSON(&userDetailReq); err != nil {
		log.Println(fmt.Errorf("[GetUserInfo] param bind error: %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by ShouldBindJson: " + err.Error(),
			},
		})
		return
	}
	user, err := service.UserDetail(userDetailReq)
	if err != nil {
		log.Println(fmt.Sprintf("[UserDetail] wrong: %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by service.UserDetail: " + err.Error(),
			},
		})
		return
	}
	ctx.JSON(http.StatusOK, &resp.T{
		MetaData: &resp.MetaData{
			Code: http.StatusOK,
			Msg:  "get the user info successfully",
		},
		Result: user,
	})
	return
}

func Register(ctx *gin.Context) {
	var registerReq req.UserRegisterReq
	if err := ctx.ShouldBindJSON(&registerReq); err != nil {
		log.Println(fmt.Errorf("[UserRegisterInfo] param bind error: %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by ShouldBindJson: " + err.Error(),
			},
		})
		return
	}
	err := service.UserRegister(registerReq)
	if err != nil {
		log.Println(fmt.Sprintf("[UserRegister] wrong %v", err))
		ctx.JSON(http.StatusBadRequest, &resp.T{
			MetaData: &resp.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by service.UserRegister: " + err.Error(),
			},
		})
		return
	}
	ctx.JSON(http.StatusOK, &resp.T{
		MetaData: &resp.MetaData{
			Code: http.StatusOK,
			Msg:  "create user successfully",
		},
	})
	return
}
